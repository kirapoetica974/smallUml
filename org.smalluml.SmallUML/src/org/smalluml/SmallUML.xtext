// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.univ-nantes.fr/smalluml" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Package returns Package:
	{Package}
	'Package' nom=EString '{'
		(elementsPackage+=ElementPackage)*
	'}'
;

ElementPackage returns ElementPackage: 
	Classe | Association | Enumeration | TypeDonnee
;

Classe returns Classe:
	{Classe}
	'Classe' nom=EString '{'
		(attributs+=Attribut | cardinalites+=Cardinalite | 'Sous-Classe'sousClasses+=Classe | methodes+=Methode)*
		('Super-Classe' superClasse=[Classe])?
		'Abstraite=' classeAbstraite?=EBoolean
	'}';

Attribut returns Attribut: 
	'Attribut' type=Type nom=EString
	;
	
Methode returns Methode:
	{Methode}
	'Methode' typeDeRetour=Type nom=EString '('parametres+=Attribut*')' 'Abstraite=' methodeAbstraite?=EBoolean
	;

Association returns Association:
	{Association}
	'Association' nom=EString '{'
		cardinalites+=Cardinalite
		cardinalites+=Cardinalite+
	'}';
	
Type returns Type:
	Chaine | Booleen | Entier | TypeDonnee | Enumeration;
	
Element returns Element: 
	nom=EString;
	
Cardinalite returns Cardinalite:
	'Role' nom=EString '['multipliciteInf=EInt '..' multipliciteSup=EInt']';
	
TypeDonnee returns TypeDonnee:
	{TypeDonnee} 
	'TypeDonnee' nom=EString '{'
		attributs+=Attribut*
	'}';

Enumeration returns Enumeration:
	{Enumeration} 
	'Enumeration' nom=EString '{'
		elements+=Element*
	'}';

Chaine returns Chaine:
	{Chaine}
	'Chaine';
	
Entier returns Entier:
	{Entier}
	'Entier';
	
Booleen returns Booleen: 
	{Booleen}
	'Booleen';


EString returns ecore::EString:
	STRING | ID;
	
EBoolean returns ecore::EBoolean:
	'Vrai' | 'Faux';
	
EInt returns ecore::EInt:
	'-'? INT;
