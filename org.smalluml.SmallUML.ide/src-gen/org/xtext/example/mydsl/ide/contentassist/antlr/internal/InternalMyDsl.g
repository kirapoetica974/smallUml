/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementPackage
entryRuleElementPackage
:
{ before(grammarAccess.getElementPackageRule()); }
	 ruleElementPackage
{ after(grammarAccess.getElementPackageRule()); } 
	 EOF 
;

// Rule ElementPackage
ruleElementPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementPackageAccess().getAlternatives()); }
		(rule__ElementPackage__Alternatives)
		{ after(grammarAccess.getElementPackageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClasse
entryRuleClasse
:
{ before(grammarAccess.getClasseRule()); }
	 ruleClasse
{ after(grammarAccess.getClasseRule()); } 
	 EOF 
;

// Rule Classe
ruleClasse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClasseAccess().getGroup()); }
		(rule__Classe__Group__0)
		{ after(grammarAccess.getClasseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribut
entryRuleAttribut
:
{ before(grammarAccess.getAttributRule()); }
	 ruleAttribut
{ after(grammarAccess.getAttributRule()); } 
	 EOF 
;

// Rule Attribut
ruleAttribut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributAccess().getGroup()); }
		(rule__Attribut__Group__0)
		{ after(grammarAccess.getAttributAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethode
entryRuleMethode
:
{ before(grammarAccess.getMethodeRule()); }
	 ruleMethode
{ after(grammarAccess.getMethodeRule()); } 
	 EOF 
;

// Rule Methode
ruleMethode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodeAccess().getGroup()); }
		(rule__Methode__Group__0)
		{ after(grammarAccess.getMethodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociation
entryRuleAssociation
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationAccess().getGroup()); }
		(rule__Association__Group__0)
		{ after(grammarAccess.getAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getNomAssignment()); }
		(rule__Element__NomAssignment)
		{ after(grammarAccess.getElementAccess().getNomAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardinalite
entryRuleCardinalite
:
{ before(grammarAccess.getCardinaliteRule()); }
	 ruleCardinalite
{ after(grammarAccess.getCardinaliteRule()); } 
	 EOF 
;

// Rule Cardinalite
ruleCardinalite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardinaliteAccess().getGroup()); }
		(rule__Cardinalite__Group__0)
		{ after(grammarAccess.getCardinaliteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDonnee
entryRuleTypeDonnee
:
{ before(grammarAccess.getTypeDonneeRule()); }
	 ruleTypeDonnee
{ after(grammarAccess.getTypeDonneeRule()); } 
	 EOF 
;

// Rule TypeDonnee
ruleTypeDonnee 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDonneeAccess().getGroup()); }
		(rule__TypeDonnee__Group__0)
		{ after(grammarAccess.getTypeDonneeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumeration
entryRuleEnumeration
:
{ before(grammarAccess.getEnumerationRule()); }
	 ruleEnumeration
{ after(grammarAccess.getEnumerationRule()); } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationAccess().getGroup()); }
		(rule__Enumeration__Group__0)
		{ after(grammarAccess.getEnumerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChaine
entryRuleChaine
:
{ before(grammarAccess.getChaineRule()); }
	 ruleChaine
{ after(grammarAccess.getChaineRule()); } 
	 EOF 
;

// Rule Chaine
ruleChaine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChaineAccess().getGroup()); }
		(rule__Chaine__Group__0)
		{ after(grammarAccess.getChaineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntier
entryRuleEntier
:
{ before(grammarAccess.getEntierRule()); }
	 ruleEntier
{ after(grammarAccess.getEntierRule()); } 
	 EOF 
;

// Rule Entier
ruleEntier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntierAccess().getGroup()); }
		(rule__Entier__Group__0)
		{ after(grammarAccess.getEntierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleen
entryRuleBooleen
:
{ before(grammarAccess.getBooleenRule()); }
	 ruleBooleen
{ after(grammarAccess.getBooleenRule()); } 
	 EOF 
;

// Rule Booleen
ruleBooleen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleenAccess().getGroup()); }
		(rule__Booleen__Group__0)
		{ after(grammarAccess.getBooleenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPackage__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPackageAccess().getClasseParserRuleCall_0()); }
		ruleClasse
		{ after(grammarAccess.getElementPackageAccess().getClasseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementPackageAccess().getAssociationParserRuleCall_1()); }
		ruleAssociation
		{ after(grammarAccess.getElementPackageAccess().getAssociationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementPackageAccess().getEnumerationParserRuleCall_2()); }
		ruleEnumeration
		{ after(grammarAccess.getElementPackageAccess().getEnumerationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementPackageAccess().getTypeDonneeParserRuleCall_3()); }
		ruleTypeDonnee
		{ after(grammarAccess.getElementPackageAccess().getTypeDonneeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getAttributsAssignment_4_0()); }
		(rule__Classe__AttributsAssignment_4_0)
		{ after(grammarAccess.getClasseAccess().getAttributsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getClasseAccess().getCardinalitesAssignment_4_1()); }
		(rule__Classe__CardinalitesAssignment_4_1)
		{ after(grammarAccess.getClasseAccess().getCardinalitesAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getClasseAccess().getGroup_4_2()); }
		(rule__Classe__Group_4_2__0)
		{ after(grammarAccess.getClasseAccess().getGroup_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getClasseAccess().getMethodesAssignment_4_3()); }
		(rule__Classe__MethodesAssignment_4_3)
		{ after(grammarAccess.getClasseAccess().getMethodesAssignment_4_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getChaineParserRuleCall_0()); }
		ruleChaine
		{ after(grammarAccess.getTypeAccess().getChaineParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBooleenParserRuleCall_1()); }
		ruleBooleen
		{ after(grammarAccess.getTypeAccess().getBooleenParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEntierParserRuleCall_2()); }
		ruleEntier
		{ after(grammarAccess.getTypeAccess().getEntierParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeDonneeParserRuleCall_3()); }
		ruleTypeDonnee
		{ after(grammarAccess.getTypeAccess().getTypeDonneeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEnumerationParserRuleCall_4()); }
		ruleEnumeration
		{ after(grammarAccess.getTypeAccess().getEnumerationParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getVraiKeyword_0()); }
		'Vrai'
		{ after(grammarAccess.getEBooleanAccess().getVraiKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFauxKeyword_1()); }
		'Faux'
		{ after(grammarAccess.getEBooleanAccess().getFauxKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageAction_0()); }
	()
	{ after(grammarAccess.getPackageAccess().getPackageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
	'Package'
	{ after(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getNomAssignment_2()); }
	(rule__Package__NomAssignment_2)
	{ after(grammarAccess.getPackageAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getElementsPackageAssignment_4()); }
	(rule__Package__ElementsPackageAssignment_4)*
	{ after(grammarAccess.getPackageAccess().getElementsPackageAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__0__Impl
	rule__Classe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getClasseAction_0()); }
	()
	{ after(grammarAccess.getClasseAccess().getClasseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__1__Impl
	rule__Classe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getClasseKeyword_1()); }
	'Classe'
	{ after(grammarAccess.getClasseAccess().getClasseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__2__Impl
	rule__Classe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getNomAssignment_2()); }
	(rule__Classe__NomAssignment_2)
	{ after(grammarAccess.getClasseAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__3__Impl
	rule__Classe__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getClasseAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__4__Impl
	rule__Classe__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getAlternatives_4()); }
	(rule__Classe__Alternatives_4)*
	{ after(grammarAccess.getClasseAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__5__Impl
	rule__Classe__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getGroup_5()); }
	(rule__Classe__Group_5__0)?
	{ after(grammarAccess.getClasseAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__6__Impl
	rule__Classe__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getAbstraiteKeyword_6()); }
	'Abstraite='
	{ after(grammarAccess.getClasseAccess().getAbstraiteKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__7__Impl
	rule__Classe__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getClasseAbstraiteAssignment_7()); }
	(rule__Classe__ClasseAbstraiteAssignment_7)
	{ after(grammarAccess.getClasseAccess().getClasseAbstraiteAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getClasseAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classe__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group_4_2__0__Impl
	rule__Classe__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getSousClasseKeyword_4_2_0()); }
	'Sous-Classe'
	{ after(grammarAccess.getClasseAccess().getSousClasseKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getSousClassesAssignment_4_2_1()); }
	(rule__Classe__SousClassesAssignment_4_2_1)
	{ after(grammarAccess.getClasseAccess().getSousClassesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classe__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group_5__0__Impl
	rule__Classe__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getSuperClasseKeyword_5_0()); }
	'Super-Classe'
	{ after(grammarAccess.getClasseAccess().getSuperClasseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getSuperClasseAssignment_5_1()); }
	(rule__Classe__SuperClasseAssignment_5_1)
	{ after(grammarAccess.getClasseAccess().getSuperClasseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group__0__Impl
	rule__Attribut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getAttributKeyword_0()); }
	'Attribut'
	{ after(grammarAccess.getAttributAccess().getAttributKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group__1__Impl
	rule__Attribut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getTypeAssignment_1()); }
	(rule__Attribut__TypeAssignment_1)
	{ after(grammarAccess.getAttributAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getNomAssignment_2()); }
	(rule__Attribut__NomAssignment_2)
	{ after(grammarAccess.getAttributAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__0__Impl
	rule__Methode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getMethodeAction_0()); }
	()
	{ after(grammarAccess.getMethodeAccess().getMethodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__1__Impl
	rule__Methode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getMethodeKeyword_1()); }
	'Methode'
	{ after(grammarAccess.getMethodeAccess().getMethodeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__2__Impl
	rule__Methode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getTypeDeRetourAssignment_2()); }
	(rule__Methode__TypeDeRetourAssignment_2)
	{ after(grammarAccess.getMethodeAccess().getTypeDeRetourAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__3__Impl
	rule__Methode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getNomAssignment_3()); }
	(rule__Methode__NomAssignment_3)
	{ after(grammarAccess.getMethodeAccess().getNomAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__4__Impl
	rule__Methode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getMethodeAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__5__Impl
	rule__Methode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getParametresAssignment_5()); }
	(rule__Methode__ParametresAssignment_5)*
	{ after(grammarAccess.getMethodeAccess().getParametresAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__6__Impl
	rule__Methode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getMethodeAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__7__Impl
	rule__Methode__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getAbstraiteKeyword_7()); }
	'Abstraite='
	{ after(grammarAccess.getMethodeAccess().getAbstraiteKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getMethodeAbstraiteAssignment_8()); }
	(rule__Methode__MethodeAbstraiteAssignment_8)
	{ after(grammarAccess.getMethodeAccess().getMethodeAbstraiteAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAssociationAction_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getAssociationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAssociationKeyword_1()); }
	'Association'
	{ after(grammarAccess.getAssociationAccess().getAssociationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getNomAssignment_2()); }
	(rule__Association__NomAssignment_2)
	{ after(grammarAccess.getAssociationAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__3__Impl
	rule__Association__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__4__Impl
	rule__Association__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCardinalitesAssignment_4()); }
	(rule__Association__CardinalitesAssignment_4)
	{ after(grammarAccess.getAssociationAccess().getCardinalitesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__5__Impl
	rule__Association__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAssociationAccess().getCardinalitesAssignment_5()); }
		(rule__Association__CardinalitesAssignment_5)
		{ after(grammarAccess.getAssociationAccess().getCardinalitesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getAssociationAccess().getCardinalitesAssignment_5()); }
		(rule__Association__CardinalitesAssignment_5)*
		{ after(grammarAccess.getAssociationAccess().getCardinalitesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinalite__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__0__Impl
	rule__Cardinalite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getRoleKeyword_0()); }
	'Role'
	{ after(grammarAccess.getCardinaliteAccess().getRoleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__1__Impl
	rule__Cardinalite__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getNomAssignment_1()); }
	(rule__Cardinalite__NomAssignment_1)
	{ after(grammarAccess.getCardinaliteAccess().getNomAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__2__Impl
	rule__Cardinalite__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getCardinaliteAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__3__Impl
	rule__Cardinalite__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getMultipliciteInfAssignment_3()); }
	(rule__Cardinalite__MultipliciteInfAssignment_3)
	{ after(grammarAccess.getCardinaliteAccess().getMultipliciteInfAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__4__Impl
	rule__Cardinalite__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getFullStopFullStopKeyword_4()); }
	'..'
	{ after(grammarAccess.getCardinaliteAccess().getFullStopFullStopKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__5__Impl
	rule__Cardinalite__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getMultipliciteSupAssignment_5()); }
	(rule__Cardinalite__MultipliciteSupAssignment_5)
	{ after(grammarAccess.getCardinaliteAccess().getMultipliciteSupAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cardinalite__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardinaliteAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getCardinaliteAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDonnee__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDonnee__Group__0__Impl
	rule__TypeDonnee__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDonneeAccess().getTypeDonneeAction_0()); }
	()
	{ after(grammarAccess.getTypeDonneeAccess().getTypeDonneeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDonnee__Group__1__Impl
	rule__TypeDonnee__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDonneeAccess().getTypeDonneeKeyword_1()); }
	'TypeDonnee'
	{ after(grammarAccess.getTypeDonneeAccess().getTypeDonneeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDonnee__Group__2__Impl
	rule__TypeDonnee__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDonneeAccess().getNomAssignment_2()); }
	(rule__TypeDonnee__NomAssignment_2)
	{ after(grammarAccess.getTypeDonneeAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDonnee__Group__3__Impl
	rule__TypeDonnee__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDonneeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeDonneeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDonnee__Group__4__Impl
	rule__TypeDonnee__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDonneeAccess().getAttributsAssignment_4()); }
	(rule__TypeDonnee__AttributsAssignment_4)*
	{ after(grammarAccess.getTypeDonneeAccess().getAttributsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDonnee__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDonneeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeDonneeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__0__Impl
	rule__Enumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getEnumerationAction_0()); }
	()
	{ after(grammarAccess.getEnumerationAccess().getEnumerationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__1__Impl
	rule__Enumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getEnumerationKeyword_1()); }
	'Enumeration'
	{ after(grammarAccess.getEnumerationAccess().getEnumerationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__2__Impl
	rule__Enumeration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getNomAssignment_2()); }
	(rule__Enumeration__NomAssignment_2)
	{ after(grammarAccess.getEnumerationAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__3__Impl
	rule__Enumeration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__4__Impl
	rule__Enumeration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getElementsAssignment_4()); }
	(rule__Enumeration__ElementsAssignment_4)*
	{ after(grammarAccess.getEnumerationAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chaine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chaine__Group__0__Impl
	rule__Chaine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chaine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaineAccess().getChaineAction_0()); }
	()
	{ after(grammarAccess.getChaineAccess().getChaineAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chaine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chaine__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chaine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaineAccess().getChaineKeyword_1()); }
	'Chaine'
	{ after(grammarAccess.getChaineAccess().getChaineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entier__Group__0__Impl
	rule__Entier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntierAccess().getEntierAction_0()); }
	()
	{ after(grammarAccess.getEntierAccess().getEntierAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntierAccess().getEntierKeyword_1()); }
	'Entier'
	{ after(grammarAccess.getEntierAccess().getEntierKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Booleen__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Booleen__Group__0__Impl
	rule__Booleen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleenAccess().getBooleenAction_0()); }
	()
	{ after(grammarAccess.getBooleenAccess().getBooleenAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Booleen__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleenAccess().getBooleenKeyword_1()); }
	'Booleen'
	{ after(grammarAccess.getBooleenAccess().getBooleenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getNomEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getPackageAccess().getNomEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ElementsPackageAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getElementsPackageElementPackageParserRuleCall_4_0()); }
		ruleElementPackage
		{ after(grammarAccess.getPackageAccess().getElementsPackageElementPackageParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getNomEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getClasseAccess().getNomEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__AttributsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getAttributsAttributParserRuleCall_4_0_0()); }
		ruleAttribut
		{ after(grammarAccess.getClasseAccess().getAttributsAttributParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__CardinalitesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getCardinalitesCardinaliteParserRuleCall_4_1_0()); }
		ruleCardinalite
		{ after(grammarAccess.getClasseAccess().getCardinalitesCardinaliteParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__SousClassesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getSousClassesClasseParserRuleCall_4_2_1_0()); }
		ruleClasse
		{ after(grammarAccess.getClasseAccess().getSousClassesClasseParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__MethodesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getMethodesMethodeParserRuleCall_4_3_0()); }
		ruleMethode
		{ after(grammarAccess.getClasseAccess().getMethodesMethodeParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__SuperClasseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getSuperClasseClasseCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getClasseAccess().getSuperClasseClasseIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClasseAccess().getSuperClasseClasseIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getClasseAccess().getSuperClasseClasseCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__ClasseAbstraiteAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getClasseAbstraiteEBooleanParserRuleCall_7_0()); }
		ruleEBoolean
		{ after(grammarAccess.getClasseAccess().getClasseAbstraiteEBooleanParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getAttributAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getNomEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getAttributAccess().getNomEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__TypeDeRetourAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getTypeDeRetourTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getMethodeAccess().getTypeDeRetourTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__NomAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getNomEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getMethodeAccess().getNomEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__ParametresAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getParametresAttributParserRuleCall_5_0()); }
		ruleAttribut
		{ after(grammarAccess.getMethodeAccess().getParametresAttributParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__MethodeAbstraiteAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getMethodeAbstraiteEBooleanParserRuleCall_8_0()); }
		ruleEBoolean
		{ after(grammarAccess.getMethodeAccess().getMethodeAbstraiteEBooleanParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getNomEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getAssociationAccess().getNomEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__CardinalitesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getCardinalitesCardinaliteParserRuleCall_4_0()); }
		ruleCardinalite
		{ after(grammarAccess.getAssociationAccess().getCardinalitesCardinaliteParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__CardinalitesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getCardinalitesCardinaliteParserRuleCall_5_0()); }
		ruleCardinalite
		{ after(grammarAccess.getAssociationAccess().getCardinalitesCardinaliteParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__NomAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getNomEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getElementAccess().getNomEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__NomAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinaliteAccess().getNomEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getCardinaliteAccess().getNomEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__MultipliciteInfAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinaliteAccess().getMultipliciteInfEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getCardinaliteAccess().getMultipliciteInfEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinalite__MultipliciteSupAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinaliteAccess().getMultipliciteSupEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getCardinaliteAccess().getMultipliciteSupEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDonneeAccess().getNomEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTypeDonneeAccess().getNomEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnee__AttributsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDonneeAccess().getAttributsAttributParserRuleCall_4_0()); }
		ruleAttribut
		{ after(grammarAccess.getTypeDonneeAccess().getAttributsAttributParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationAccess().getNomEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getEnumerationAccess().getNomEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationAccess().getElementsElementParserRuleCall_4_0()); }
		ruleElement
		{ after(grammarAccess.getEnumerationAccess().getElementsElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
